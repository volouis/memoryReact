{"map":"{\"version\":3,\"sources\":[\"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/components/header.js\",\"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/components/jumbotron.js\",\"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/components/cards.js\",\"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/components/wrapper.js\",\"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/App.js\",\"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/serviceWorker.js\",\"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/index.js\"],\"names\":[\"Head\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"id\",\"guess\",\"count\",\"highScore\",\"Jumbo\",\"Card\",\"val\",\"onClick\",\"beenClick\",\"src\",\"image\",\"alt\",\"Wrapper\",\"children\",\"App\",\"state\",\"friends\",\"console\",\"log\",\"_this\",\"findIndex\",\"x\",\"hit\",\"restartGame\",\"setState\",\"preState\",\"cardRandomizer\",\"this\",\"forEach\",\"element\",\"newList\",\"justHere\",\"splice\",\"i\",\"length\",\"ran\",\"Math\",\"floor\",\"random\",\"push\",\"_this2\",\"components_header\",\"components_jumbotron\",\"components_wrapper\",\"map\",\"cards\",\"key\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport \\\"./style/header.css\\\"\\n\\nconst Head = props => (\\n    <nav className=\\\"navbar\\\">\\n        <p className=\\\"navbar-brand text-light\\\">Memory Game</p>\\n        <span id={props.guess} className=\\\"guess\\\" >You guessed {props.guess}!!!</span>\\n        <span className=\\\"navbar-text text-light\\\">\\n            Score: {props.count} | Top Score: {props.highScore}\\n        </span>\\n    </nav>\\n);\\n\\nexport default Head;\",\"import React from \\\"react\\\";\\nimport \\\"./style/jumbotron.css\\\"\\n\\nconst Jumbo = props => (\\n    <div className=\\\"jumbotron jumbotron-fluid\\\">\\n        <div className=\\\"container\\\">\\n            <h1 className=\\\"display-4 mainTitle\\\">Clicky Game!</h1>\\n            <p className=\\\"lead\\\">Click on an image to earn points, but don't click on any more than once!</p>\\n        </div>\\n    </div>  \\n);\\n\\nexport default Jumbo;\\n\",\"import React from \\\"react\\\";\\nimport \\\"./style/card.css\\\"\\n\\nconst Card = props => (\\n    <button className=\\\"btn\\\" val={props.id} onClick={() => props.beenClick(props.id)}>\\n        <div className=\\\"card\\\">\\n            <img className=\\\"card-img-top\\\" src={props.image} alt=\\\"Card\\\"/>\\n        </div>\\n    </button>\\n);\\n\\nexport default Card;\",\"import React from \\\"react\\\";\\nimport \\\"./style/wrapper.css\\\";\\n\\nconst Wrapper = props => <div className=\\\"wrapper\\\">{props.children}</div>;\\n\\nexport default Wrapper;\\n\",\"import React, { Component } from 'react';\\nimport Head from \\\"./components/header\\\";\\nimport Jumbo from \\\"./components/jumbotron\\\";\\nimport Card from \\\"./components/cards\\\"\\nimport friends from \\\"./friends.json\\\";\\nimport Wrapper from \\\"./components/wrapper\\\"\\nimport './App.css';\\n\\nclass App extends Component {\\n  state = {\\n    friends,\\n    count: 0,\\n    highScore: 0,\\n    guess: \\\"\\\"\\n  }\\n\\n  beenClick = id => {\\n    console.log(this.state.friends.findIndex(x => x.id === id));\\n\\n    if(this.state.friends[this.state.friends.findIndex(x => x.id === id)].hit){\\n      this.restartGame();\\n      this.setState({guess: \\\"Wrong\\\"});\\n    }else{\\n      this.state.friends[this.state.friends.findIndex(x => x.id === id)].hit = true;\\n      this.setState((preState, props) => ({\\n        count: preState.count + 1\\n      }), () => {\\n        if(this.state.highScore < this.state.count){\\n          this.setState({highScore: this.state.count});\\n        }\\n        this.setState({guess: \\\"Right\\\"});\\n        this.cardRandomizer();\\n      })\\n    }\\n  }\\n\\n  restartGame(){\\n    this.state.friends.forEach(element => {\\n      element.hit = false;\\n    });\\n    this.setState({count : 0});\\n    this.cardRandomizer();\\n  }\\n\\n  cardRandomizer(){\\n    let newList = [];\\n    let justHere = this.state.friends.splice(0);\\n\\n    for(let i = 0; i < justHere.length; i++){\\n      let ran = Math.floor(Math.random() * Math.floor(justHere.length))\\n      newList.push(justHere[ran])\\n      justHere.splice(ran, 1)\\n      i--;\\n    }\\n    this.setState({friends: newList})\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <Head\\n          count = {this.state.count}\\n          highScore = {this.state.highScore}\\n          guess = {this.state.guess}\\n        />\\n        <Jumbo/>\\n        <Wrapper>\\n          {this.state.friends.map(friends => (\\n            <Card\\n              key = {friends.id}\\n              id = {friends.id}\\n              image = {friends.image}\\n              beenClick = {this.beenClick}\\n            />\\n          ))}\\n        </Wrapper>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,function(e){e.exports=[{id:1,name:\"SpongeBob\",image:\"https://upload.wikimedia.org/wikipedia/en/thumb/4/47/Spongebob-squarepants.svg/666px-Spongebob-squarepants.svg.png\",hit:!1},{id:2,name:\"Mr. Krabs\",image:\"https://vignette3.wikia.nocookie.net/vsbattles/images/8/80/Mr._Krabs.png/revision/latest?cb=20150919162131\",hit:!1},{id:3,name:\"Squidward\",image:\"https://vignette2.wikia.nocookie.net/fictionalcharacters/images/a/ac/Squidward.png/revision/latest?cb=20131121012626\",hit:!1},{id:4,name:\"Dexter\",image:\"https://s-media-cache-ak0.pinimg.com/originals/fe/32/49/fe32495d45283cd6860ae122f0aeaad9.png\",hit:!1},{id:5,name:\"Courage\",image:\"https://vignette4.wikia.nocookie.net/vsbattles/images/3/39/Courage-0.png/revision/latest?cb=20160719055423\",hit:!1},{id:6,name:\"Doug Funnie\",image:\"https://vignette1.wikia.nocookie.net/doug/images/3/3b/Doug001.gif/revision/latest?cb=20110807170511\",hit:!1},{id:7,name:\"Bugs Bunny\",image:\"https://vignette2.wikia.nocookie.net/deathbattlefanon/images/2/2b/Bugs_Bunny.png/revision/latest?cb=20151206010607\",hit:!1},{id:8,name:\"Johnny Bravo\",image:\"http://vignette3.wikia.nocookie.net/p__/images/9/9a/Johnny_Bravo.png/revision/latest?cb=20131031233339&path-prefix=protagonist\",hit:!1},{id:9,name:\"Tommy Pickles\",image:\"https://vignette4.wikia.nocookie.net/uncyclopedia/images/e/e4/Tommy_Pickles.png/revision/latest?cb=20110530102641\",hit:!1},{id:10,name:\"Rocko\",image:\"http://vignette3.wikia.nocookie.net/rockosmodernlife/images/9/9e/Rockos-modern-life-4e582a8f06a41.png/revision/latest?cb=20130522173416\",hit:!1},{id:11,name:\"Captain Planet\",image:\"http://vignette2.wikia.nocookie.net/dragon-rap-battles/images/b/b6/Captain_Planet.png/revision/latest?cb=20160911200836\",hit:!1},{id:12,name:\"Ickis\",image:\"http://static.tvtropes.org/pmwiki/pub/images/ickis.png\",hit:!1}]},,,function(e,t,n){e.exports=n(26)},,,,,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){\"use strict\";n.r(t);var a=n(0),i=n.n(a),o=n(2),s=n.n(o),r=(n(14),n(3)),c=n(4),m=n(7),l=n(5),g=n(8),u=(n(16),function(e){return i.a.createElement(\"nav\",{className:\"navbar\"},i.a.createElement(\"p\",{className:\"navbar-brand text-light\"},\"Memory Game\"),i.a.createElement(\"span\",{id:e.guess,className:\"guess\"},\"You guessed \",e.guess,\"!!!\"),i.a.createElement(\"span\",{className:\"navbar-text text-light\"},\"Score: \",e.count,\" | Top Score: \",e.highScore))}),d=(n(18),function(e){return i.a.createElement(\"div\",{className:\"jumbotron jumbotron-fluid\"},i.a.createElement(\"div\",{className:\"container\"},i.a.createElement(\"h1\",{className:\"display-4 mainTitle\"},\"Clicky Game!\"),i.a.createElement(\"p\",{className:\"lead\"},\"Click on an image to earn points, but don't click on any more than once!\")))}),h=(n(20),function(e){return i.a.createElement(\"button\",{className:\"btn\",val:e.id,onClick:function(){return e.beenClick(e.id)}},i.a.createElement(\"div\",{className:\"card\"},i.a.createElement(\"img\",{className:\"card-img-top\",src:e.image,alt:\"Card\"})))}),p=n(6),f=(n(22),function(e){return i.a.createElement(\"div\",{className:\"wrapper\"},e.children)}),v=(n(24),function(e){function t(){var e,n;Object(r.a)(this,t);for(var a=arguments.length,i=new Array(a),o=0;o<a;o++)i[o]=arguments[o];return(n=Object(m.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(i)))).state={friends:p,count:0,highScore:0,guess:\"\"},n.beenClick=function(e){console.log(n.state.friends.findIndex(function(t){return t.id===e})),n.state.friends[n.state.friends.findIndex(function(t){return t.id===e})].hit?(n.restartGame(),n.setState({guess:\"Wrong\"})):(n.state.friends[n.state.friends.findIndex(function(t){return t.id===e})].hit=!0,n.setState(function(e,t){return{count:e.count+1}},function(){n.state.highScore<n.state.count&&n.setState({highScore:n.state.count}),n.setState({guess:\"Right\"}),n.cardRandomizer()}))},n}return Object(g.a)(t,e),Object(c.a)(t,[{key:\"restartGame\",value:function(){this.state.friends.forEach(function(e){e.hit=!1}),this.setState({count:0}),this.cardRandomizer()}},{key:\"cardRandomizer\",value:function(){for(var e=[],t=this.state.friends.splice(0),n=0;n<t.length;n++){var a=Math.floor(Math.random()*Math.floor(t.length));e.push(t[a]),t.splice(a,1),n--}this.setState({friends:e})}},{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",{className:\"App\"},i.a.createElement(u,{count:this.state.count,highScore:this.state.highScore,guess:this.state.guess}),i.a.createElement(d,null),i.a.createElement(f,null,this.state.friends.map(function(t){return i.a.createElement(h,{key:t.id,id:t.id,image:t.image,beenClick:e.beenClick})})))}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(i.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[9,2,1]]]);","extractedComments":[]}