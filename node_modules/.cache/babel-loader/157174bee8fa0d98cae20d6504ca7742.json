{"ast":null,"code":"import _classCallCheck from \"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/App.js\";\nimport React, { Component } from 'react';\nimport Head from \"./components/header\";\nimport Jumbo from \"./components/jumbotron\";\nimport Card from \"./components/cards\";\nimport friends from \"./friends.json\";\nimport Wrapper from \"./components/wrapper\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      count: 0,\n      highScore: 0,\n      guess: \"\"\n    };\n\n    _this.beenClick = function (id) {\n      _this.setState({\n        \"friends[1].hit\": true\n      });\n\n      console.log(_this.state.friends.findIndex(function (x) {\n        return x.id === id;\n      }));\n      console.log(_this.state.friends[1].hit); // if(this.state.friends[this.state.friends.findIndex(x => x.id === id)].hit){\n      //   this.restartGame();\n      //   this.setState({\"guess[8].na\": \"Wrong\"});\n      // }else{\n      //   this.state.friends[this.state.friends.findIndex(x => x.id === id)].hit = true;\n      //   this.setState((preState, props) => ({\n      //     count: preState.count + 1\n      //   }), () => {\n      //     if(this.state.highScore < this.state.count){\n      //       this.setState({highScore: this.state.count});\n      //     }\n      //     this.setState({guess: \"Right\"});\n      //     this.cardRandomizer();\n      //   })\n      // }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"restartGame\",\n    value: function restartGame() {\n      this.state.friends.forEach(function (element) {\n        element.hit = false;\n      });\n      this.setState({\n        count: 0\n      });\n      this.cardRandomizer();\n    }\n  }, {\n    key: \"cardRandomizer\",\n    value: function cardRandomizer() {\n      var newList = [];\n      var justHere = this.state.friends.splice(0);\n\n      for (var i = 0; i < justHere.length; i++) {\n        var ran = Math.floor(Math.random() * Math.floor(justHere.length));\n        newList.push(justHere[ran]);\n        justHere.splice(ran, 1);\n        i--;\n      }\n\n      this.setState({\n        friends: newList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Head, {\n        count: this.state.count,\n        highScore: this.state.highScore,\n        guess: this.state.guess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Jumbo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.friends.map(function (friends) {\n        return React.createElement(Card, {\n          key: friends.id,\n          id: friends.id,\n          image: friends.image,\n          beenClick: _this2.beenClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/louisqvo/Documents/Bootcamp/Homework/HW_14/memoryReact/src/App.js"],"names":["React","Component","Head","Jumbo","Card","friends","Wrapper","App","state","count","highScore","guess","beenClick","id","setState","console","log","findIndex","x","hit","forEach","element","cardRandomizer","newList","justHere","splice","i","length","ran","Math","floor","random","push","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Head from \"./components/header\";\nimport Jumbo from \"./components/jumbotron\";\nimport Card from \"./components/cards\"\nimport friends from \"./friends.json\";\nimport Wrapper from \"./components/wrapper\"\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    friends,\n    count: 0,\n    highScore: 0,\n    guess: \"\"\n  }\n\n  beenClick = id => {\n    this.setState({\"friends[1].hit\": true})\n    console.log(this.state.friends.findIndex(x => x.id === id));\n    console.log(this.state.friends[1].hit)\n\n\n\n    // if(this.state.friends[this.state.friends.findIndex(x => x.id === id)].hit){\n    //   this.restartGame();\n    //   this.setState({\"guess[8].na\": \"Wrong\"});\n\n    // }else{\n    //   this.state.friends[this.state.friends.findIndex(x => x.id === id)].hit = true;\n    //   this.setState((preState, props) => ({\n    //     count: preState.count + 1\n    //   }), () => {\n    //     if(this.state.highScore < this.state.count){\n    //       this.setState({highScore: this.state.count});\n    //     }\n    //     this.setState({guess: \"Right\"});\n    //     this.cardRandomizer();\n    //   })\n    // }\n  }\n\n  restartGame(){\n    this.state.friends.forEach(element => {\n      element.hit = false;\n    });\n    this.setState({count : 0});\n    this.cardRandomizer();\n  }\n\n  cardRandomizer(){\n    let newList = [];\n    let justHere = this.state.friends.splice(0);\n\n    for(let i = 0; i < justHere.length; i++){\n      let ran = Math.floor(Math.random() * Math.floor(justHere.length))\n      newList.push(justHere[ran])\n      justHere.splice(ran, 1)\n      i--;\n    }\n    this.setState({friends: newList})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Head\n          count = {this.state.count}\n          highScore = {this.state.highScore}\n          guess = {this.state.guess}\n        />\n        <Jumbo/>\n        <Wrapper>\n          {this.state.friends.map(friends => (\n            <Card\n              key = {friends.id}\n              id = {friends.id}\n              image = {friends.image}\n              beenClick = {this.beenClick}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}